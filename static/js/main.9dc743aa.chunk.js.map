{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todoWithUsers","App","useState","setTitle","setUserId","languageError","setlanguageError","isTitleError","setTitleError","isUserError","setUserError","visibleTodos","setVisibleTodos","maxId","Math","max","handleField","e","value","target","inputValue","matches","match","join","checkValue","action","onSubmit","preventDefault","trim","newTodo","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dc743aa.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo TodoInfo--completed': completed,\n      })}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { EventForm } from './types/EventForm';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todoWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n\n  const [languageError, setlanguageError] = useState(false);\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n\n  const [visibleTodos, setVisibleTodos] = useState(todoWithUsers);\n\n  let maxId = Math.max(...todoWithUsers.map(todo => todo.id));\n\n  const createTodo = () => {\n    maxId += 1;\n\n    return ({\n      id: maxId,\n      title,\n      completed: false,\n      userId: +userId,\n      user: getUser(+userId),\n    });\n  };\n\n  function checkValue(inputValue: string) {\n    const reg = /[a-zA-Zа-яА-ЯГЄІЇ\\d\\s]/g;\n    const matches = inputValue.match(reg);\n\n    if (!matches) {\n      setlanguageError(true);\n    }\n\n    return matches?.join('') || '';\n  }\n\n  const handleField = (e: EventForm) => {\n    const { value } = e.target;\n\n    switch (e.target.id) {\n      case 'title':\n        setTitleError(false);\n        setlanguageError(false);\n        setTitle(checkValue(value));\n        break;\n\n      case 'select':\n        setUserId(value);\n        setUserError(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleNewTodo = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (title.trim() && userId) {\n      const newTodo = createTodo();\n\n      setVisibleTodos([\n        ...visibleTodos,\n        newTodo,\n      ]);\n      setUserId('');\n      setTitle('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        onSubmit={handleNewTodo}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <input\n              type=\"text\"\n              id=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleField}\n            />\n            {languageError\n              && (\n                <span className=\"error\">\n                  The title supports only\n                  EN and UA letters and numbers\n                </span>\n              )}\n\n            {isTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              id=\"select\"\n              onChange={handleField}\n            >\n\n              <option value=\"\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n\n              ))}\n            </select>\n\n          </label>\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}